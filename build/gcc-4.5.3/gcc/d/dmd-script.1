.TH gdmd 1
.SH NAME
gdmd - wrapper script for gdc that emulates the dmd command
.SH SYNOPSIS
.B gdmd
files.d
...
.I { -switch }
.SH OPTIONS
.IP files.d
.IP files.htm
.IP files.html
D source files
.IP files.di
D interface files
.IP files.o
Object files to link in
.IP files.a
Library files to link in
.IP -arch ...
pass -arch option to gdc
.IP -c
compile only, do not link
.IP -cov
do code coverage analysis
.IP -d
allow deprecated features
.IP -debug
compile in debug code
.IP -debug=level
compile in debug code <= level
.IP -debug=ident
compile in debug code identified by ident
.IP -deps=filename
write module dependencies to filename
.IP -g
add symbolic debug info
.IP -gt
add trace profiling hooks (not supported under linux)
.IP -H
generate 'header' file
.IP -Hdhdrdir
write 'header' file to hdrdir directory
.IP -Hffilename
write 'header' file to filename
.IP -inline
do function inlining
.IP -Llinkerflag
pass linkerflag to linker
.IP -lib
generate library
.IP -O
optimize
.IP -o-
do not write object file
.IP -odobjdir
write object files to directory objdir
.IP -offilename
name output file to filename
.IP -op
do not strip paths from source file
.IP -Ipath
where to look for imports

.I path
is a ; separated list of paths. Multiple -I's can be used, and the paths are searched in the same order.
.IP -pipe
use pipes instead of intermediate files
.IP -profile
profile runtime performance
.IP -quiet
suppress unnecessary error messages
.IP -q<arg1>[,<arg2>,<arg3>,...]
Pass the comma-separated arguments to gdc
.IP -release
compile release version
.IP -run
run resulting program, passing args
.IP -unittest
compile in unit tests
.IP -v
verbose
.IP -vdmd
Print commands executed by this wrapper script
.IP -version=level
compile in version code >= level
.IP  version=ident
compile in version code identified by ident
.IP -X
generate JSON file
.IP -Xffilename
write JSON to filename

.SH SEE ALSO
.BR gdc(1)

.SH AUTHOR
Copyright

(C) 2004 David Friedman

Modified by

(C) 2010 Iain Buclaw

(C) 2010 Michael Parrott

(C) 2010 Vincenzo Ampolo
