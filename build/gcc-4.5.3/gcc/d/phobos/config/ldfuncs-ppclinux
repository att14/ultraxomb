
private import std.c.linux.ldblcompat;

extern (C) {

static if (__No_Long_Double_Math)
{
real acos( double ); alias acos acosl;
real asin( double ); alias asin asinl;
real atan( double ); alias atan atanl;
real atan2( double, double ); alias atan2 atan2l;
real cos( double ); alias cos cosl;
real sin( double ); alias sin sinl;
real tan( double ); alias tan tanl;
real acosh( double ); alias acosh acoshl;
real asinh( double ); alias asinh asinhl;
real atanh( double ); alias atanh atanhl;
real cosh( double ); alias cosh coshl;
real sinh( double ); alias sinh sinhl;
real tanh( double ); alias tanh tanhl;
real exp( double ); alias exp expl;
real exp2( double ); alias exp2 exp2l;
real expm1( double ); alias expm1 expm1l;
real log( double ); alias log logl;
real log10( double ); alias log10 log10l;
real log2( double ); alias log2 log2l;
real log1p( double ); alias log1p log1pl;
real logb( double ); alias logb logbl;

double modf(double, double*);
extern (D) real modfl(real x, real * py) {
    double dx = x;
    double y;
    double result = modf(dx, & y);
    *py = y;
    return result;
}

real ldexp( double, int ); alias ldexp ldexpl;
real frexp( double, int * ); alias frexp frexpl;
int ilogb( double ); alias ilogb ilogbl;
real scalbn( double, int ); alias scalbn scalbnl;
real scalbln( double, Clong_t ); alias scalbln scalblnl;
real fabs( double ); alias fabs fabsl;
real cbrt( double ); alias cbrt cbrtl;
real hypot( double, double ); alias hypot hypotl;
real pow( double, double ); alias pow powl;
real sqrt( double ); alias sqrt sqrtl;
real erf( double ); alias erf erfl;
real erfc( double ); alias erfc erfcl;
real lgamma( double ); alias lgamma lgammal;
real tgamma( double ); alias tgamma tgammal;
real ceil( double ); alias ceil ceill;
real floor( double ); alias floor floorl;
real nearbyint( double ); alias nearbyint nearbyintl;
real rint( double ); alias rint rintl;
Clong_t lrint( double ); alias lrint lrintl;
long llrint( double ); alias llrint llrintl;
real round( double ); alias round roundl;
Clong_t lround( double ); alias lround lroundl;
long llround( double ); alias llround llroundl;
real trunc( double ); alias trunc truncl;
real fmod( double, real); alias fmod fmodl;
real remainder( double, double ); alias remainder remainderl;
real remquo( double, double, int * ); alias remquo remquol;
real copysign( double, double ); alias copysign copysignl;
real nan( char * ); alias nan nanl;
real nextafter( double, double );
alias nextafter nextafterl;
alias nextafter nexttowardl;
real fdim( double, double ); alias fdim fdiml;
real fmax( double, double ); alias fmax fmaxl;
real fmin( double, double ); alias fmin fminl;
real fma( double, double, double ); alias fma fmal;
}
else
{
real acosl( real );
real asinl( real );
real atanl( real );
real atan2l( real, real );
real cosl( real );
real sinl( real );
real tanl( real );
real acoshl( real );
real asinhl( real );
real atanhl( real );
real coshl( real );
real sinhl( real );
real tanhl( real );
real expl( real );
real exp2l( real );
real expm1l( real );
real logl( real );
real log10l( real );
real log2l( real );
real log1pl( real );
real logbl( real );
real modfl( real, real * );
real ldexpl( real, int );
real frexpl( real, int * );
int ilogbl( real );
real scalbnl( real, int );
real scalblnl( real, Clong_t );
real fabsl( real );
real cbrtl( real );
real hypotl( real, real );
real powl( real, real );
real sqrtl( real );
real erfl( real );
real erfcl( real );
real lgammal( real );
real tgammal( real );
real ceill( real );
real floorl( real );
real nearbyintl( real );
real rintl( real );
Clong_t lrintl( real );
long llrintl( real );
real roundl( real );
Clong_t lroundl( real );
long llroundl( real );
real truncl( real );
real fmodl( real, real);
real remainderl( real, real );
real remquol( real, real, int * );
real copysignl( real, real );
real nanl( char * );
real nextafterl( real, real );
double nexttoward( double, real );
float nexttowardf( float, real );
real nexttowardl( real, real );
real fdiml( real, real );
real fmaxl( real, real );
real fminl( real, real );
real fmal( real, real, real );

double sqrt(double);
}

}
